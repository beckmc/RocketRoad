#include "generate.h"

Generate::Generate(User* user, User* logged_user, UserContainer* user_container)
{
    user_ = user;
    user_container_ = user_container;
    logged_user_ = logged_user;

    std::vector<std::string> username;
    username.push_back(user->getUserName());

    PostContainer post_container(username, user_container_);
    posts_ = post_container.get_posts();

    for (Post* post : posts_) {
        CommentContainer comment_container(post, user_container_);
        post->setComments(comment_container.getComments());
    }
}

void Generate::run()
{
    if (generate())
    {
        open();
    }
}

bool Generate::generate()
{
    std::ofstream file;
    std::string file_name = "../../html/";
    file_name += user_->getName();
    std::transform(file_name.begin(), file_name.end(), file_name.begin(), ::tolower);
    file_name.erase( std::remove_if( file_name.begin(), file_name.end(), ::isspace ), file_name.end() );
    file_name += ".html";
    file.open(file_name.c_str());
    file << "<!DOCTYPE html><html><title>" << user_->getName() << "</title><meta name=\"" <<
        "viewport\"content=\"width=device-width, initial-scale=1\"><link rel=\"stylesheet\"" <<
        "href=\"http://www.w3schools.com/lib/w3.css\"><body><header class=\"w3-container w3-red\">" <<
        "<h1>" << user_->getName() << "</h1>" <<
        "<h4><a href=\"mailto:" << user_->getUserName() << "\">" << user_->getUserName() << "</a>";

    if (user_ != logged_user_)
    {
        if (user_->isFriend(logged_user_))
        {
            file << " - Friend";
        }

        else
        {
            file << " - Not Friends";
        }
    }

    file << "</h4></header>";
    file << "<div class=\"w3-container\">";
    if (posts_.size() > 0)
    {
        for (int i = 0; i < posts_.size(); i++)
        {
            Post * current_post = posts_[i];
            Date date;
            file << "<p>" << current_post->getPost() << " - " << date.convertDate(current_post->getTime()) << "</p>";
            if (current_post->getLikesString().size() > 0)
            {
                file << "<p>Liked by: ";
                std::vector<std::string> vect;
                std::stringstream ss(current_post->getLikesString().c_str());
                std::string item;
                while (std::getline(ss, item, ',')) {
                    vect.push_back(item);
                }
                for (int i = 0; i < vect.size(); i++) {
                    if (i > 0) {
                        file << ", ";
                    }
                    file << user_container_->findUser(vect.at(i))->getName().c_str();
                }
                file << "<\p>";
            }

            file << "<hr>";
        }
    }

    else
    {
        file << "<p>No posts found.</p>";
    }

    file << "</div>";

    file << "<footer class=\"w3-container w3-red w3-margin-top\">"
         << "<p>Scrapbook Generated by Rocket Road - Try it yourself! Â© <a href=http://www.thunderscore.tk>TH_</a></p></footer>";

    file << "</body></html>";
    file.close();
    return true;
}

void Generate::open()
{

}
